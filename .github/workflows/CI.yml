# This is a basic workflow to help you get started with Actions

name: Continous Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, development_v2 ]
  pull_request:
    branches: [ main, development_v2 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-gcc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Create build directory
      - name: Build project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DBASYX_BUILD_TESTS=ON -DBASYX_UTILITY_PROJECTS=OFF -DBUILD_SHARED_LIBS=ON
          cmake --build . -j2

      # Run tests
      - name: Run tests
        run: |
          cd build
          ctest

  # This workflow contains a single job called "build"
  build-msvc:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Create build directory
      - name: Build project
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DBASYX_BUILD_TESTS=ON -DBASYX_UTILITY_PROJECTS=OFF -DBUILD_SHARED_LIBS=OFF
          cmake --build . -j2

      # Run tests
      - name: Run tests
        run: |
          cd build
          ctest
